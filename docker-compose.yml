version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ecommerce_db
      MYSQL_USER: ecommerce
      MYSQL_PASSWORD: ecommerce123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ecommerce_network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: always
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URI=mysql+pymysql://ecommerce:ecommerce123@mysql:3306/ecommerce_db
      - SECRET_KEY=your_secret_key
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    networks:
      - ecommerce_network

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    restart: always
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URI=mysql+pymysql://ecommerce:ecommerce123@mysql:3306/ecommerce_db
      - SECRET_KEY=your_secret_key
    ports:
      - "5001:5000"   # Maps container port 5000 to host port 5001
    depends_on:
      - mysql
    networks:
      - ecommerce_network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    restart: always
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URI=mysql+pymysql://ecommerce:ecommerce123@mysql:3306/ecommerce_db
      - SECRET_KEY=your_secret_key
    ports:
      - "5002:5000"   # Maps container port 5000 to host port 5002
    depends_on:
      - mysql
    networks:
      - ecommerce_network

volumes:
  mysql_data:

networks:
  ecommerce_network:
    driver: bridge
